<?xml version='1.0' encoding='UTF-8'?>
<flow-definition plugin="workflow-job@2.9">
  <actions/>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <org.jenkinsci.plugins.workflow.job.properties.PipelineTriggersJobProperty>
      <triggers/>
    </org.jenkinsci.plugins.workflow.job.properties.PipelineTriggersJobProperty>
  </properties>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@2.24">
    <script>stage(&apos;init&apos;) {
    node (&quot;localroot&quot;){
        sh &apos;cd /opt/tikal/deploy; ./deploy.sh init&apos;
        sh &apos;/sbin/iptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE&apos;
    }
}
stage(&apos;reqs&apos;) {
    node (&quot;localroot&quot;){
        sh &apos;cd /opt/tikal/deploy; ./deploy.sh reqs&apos;
    }
}
stage(&apos;image&apos;) {
    node (&quot;localroot&quot;){
        sh &apos;cd /opt/tikal/deploy; ./deploy.sh image iso&apos;
    }
}

stage(&apos;vagrant&apos;) {
    node (&quot;localroot&quot;){
        sh &apos;cd /root/.ssh; cat id_rsa.pub &gt; authorized_keys&apos;
        sh &apos;rm -f /root/.ssh/known_hosts&apos;
        sh &apos;cd /opt/tikal/deploy; ./deploy.sh vagrant&apos;
        sh &apos;ssh-keyscan -H 10.0.10.1 &gt;&gt; ~/.ssh/known_hosts&apos;
    }
}
stage(&apos;java&apos;) {
    node (&quot;localroot&quot;){
        sh &apos;sleep 90&apos;
        sh &apos;ssh 10.0.10.1 &quot;sudo apt-get install default-jdk -y&quot;&apos;
    }
}
stage(&apos;repository&apos;) {
    node (&quot;sanjer&quot;){
        sh &apos;cd /opt/tikal/deploy; ./deploy.sh repository&apos;
    }
}
stage(&apos;server&apos;) {
    node (&quot;sanjer&quot;){
        sh &apos;cd /opt/tikal/deploy; ./deploy.sh server&apos;
    }
}
stage(&apos;pubkey&apos;) {
    node (&quot;sanjer&quot;){
        sh &apos;cd /opt/tikal/deploy; ./deploy.sh pubkey&apos;
    }
}
stage(&apos;net&apos;) {
    node (&quot;sanjer&quot;){
        sh &apos;cd /opt/tikal/deploy; ./deploy.sh net&apos;
        sh &apos;ip -s -s neigh flush all&apos;
    }
}
stage(&apos;base&apos;) {
    node (&quot;sanjer&quot;){
        sh &apos;cd /opt/tikal/deploy; ./deploy.sh base&apos;
    }
}
stage(&apos;consul&apos;) {
    node (&apos;sanjer&apos;){
        sh &apos;cd /opt/tikal/deploy; ./deploy.sh consul&apos;
    }
}
stage(&apos;openstack&apos;) {
    node (&apos;sanjer&apos;){
        sh &apos;cd /opt/tikal/deploy; ./deploy.sh openstack&apos;
    }
}
</script>
    <sandbox>false</sandbox>
  </definition>
  <triggers/>
</flow-definition>
