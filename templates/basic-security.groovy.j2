#!groovy
import hudson.security.*
import jenkins.model.*
import org.jenkinsci.plugins.*

def instance = Jenkins.getInstance()

//if (!instance.isUseSecurity()) {

  // disable signup
  def hudsonRealm = new HudsonPrivateSecurityRealm(false)
  {% for account in cj_local_admin_users %}
  hudsonRealm.createAccount('{{ account.username }}', '{{ account.password }}')
  {% endfor %}
  {% for account in cj_local_regular_users %}
  hudsonRealm.createAccount('{{ account.username }}', '{{ account.password }}')
  {% endfor %}
  instance.setSecurityRealm(hudsonRealm)
  instance.save()

  def strategy = new hudson.security.ProjectMatrixAuthorizationStrategy()
  {% for account in cj_local_admin_users %}
  strategy.add(Jenkins.ADMINISTER, "{{ account.username }}")
  {% endfor %}
  {% for account in cj_local_regular_users %}
  //strategy.add(hudson.model.View.READ, "{{ account.username }}")
  //strategy.add(hudson.model.Item.READ, "{{ account.username }}")
  strategy.add(Jenkins.READ, "{{ account.username }}")
  {% endfor %}
  {% if cj_allow_anon_read is defined %}
  strategy.add(hudson.model.View.READ, 'anonymous')
  strategy.add(hudson.model.Item.READ, 'anonymous')
  strategy.add(Jenkins.READ, 'anonymous')
  {% endif %}

  instance.setAuthorizationStrategy(strategy)

  {% if ldap.enabled == true %}  
  String server = "{{ ldap.host }}"
  String rootDN = "{{ ldap.rootDN }}"
  String userSearchBase = ''
  String userSearch = "{{ ldap.userSearch }}"
  String groupSearchBase = ''
  String managerDN = "{{ ldap.managerDN }}"
  String managerPassword = "{{ ldap.managerPasswordSecret }}"
  boolean inhibitInferRootDN = false
      
  SecurityRealm ldap_realm = new LDAPSecurityRealm(server, rootDN, userSearchBase, userSearch, groupSearchBase, managerDN, managerPassword, inhibitInferRootDN) 
  Jenkins.instance.setSecurityRealm(ldap_realm)
  Jenkins.instance.authorizationStrategy = new FullControlOnceLoggedInAuthorizationStrategy() ;
  Jenkins.instance.save()
  {% endif %}
//}
