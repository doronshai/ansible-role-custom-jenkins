#!groovy

import jenkins.model.*
import hudson.security.*
import hudson.plugins.active_directory.*

def instance = Jenkins.getInstance()

println "Checking if security has already been set"
if (!instance.isUseSecurity()) {
    {% if activedirectory.enabled == true %}  
        String domain = '{{ cj_AD_auth_domain }}'
        String site = '{{ cj_AD_auth_site }}'
        String server = '{{ cj_AD_auth_server }}'
        String bindName = '{{ cj_AD_auth_bindName }}'
        String bindPassword = '{{ cj_AD_auth_bindPassword }}'
        adrealm = new ActiveDirectorySecurityRealm(domain, site, bindName, bindPassword, server)
        instance.setSecurityRealm(adrealm)
        instance.save()
    {% endif %}
    {% if ldap.enabled == true %}  
        println ("--DEBUG---------------------------------------- 111111 -------------------------------------------")
        String server = "{{ ldap.host }}"
        String rootDN = "{{ ldap.rootDN }}"
        String userSearchBase = ''
        String userSearch = "{{ ldap.userSearch }}"
        String groupSearchBase = "{{ ldap.groupSearchBase }}"
        String groupSearchfilter = "{{ ldap.groupSearchfilter }}"
        LDAPGroupMembershipStrategy groupMembershipStrategy = "{{ ldap.membershipStrategyAttribute }}"
        String managerDN = "{{ ldap.managerDN }}"
        Secret managerPassword = "{{ ldap.managerPasswordSecret }}"
        boolean inhibitInferRootDN = false
        boolean disableMailAddressResolver = false
        CacheConfiguration cache = "{{ ldap.cache }}"
        String displayNameAttributeName = "{{ ldap.displayNameAttributeName }}"
        String mailAddressAttributeName = "mail"
        IdStrategy userIdStrategy = ""
        IdStrategy groupIdStrategy = ""
        println ("--DEBUG---------------------------------------- 222222 -------------------------------------------")
        SecurityRealm ldap_realm = new LDAPSecurityRealm(server, rootDN, userSearchBase, userSearch, groupSearchBase, groupSearchfilter, groupMembershipStrategy, managerDN, managerPassword, inhibitInferRootDN, disableMailAddressResolver, cache, environmentProperties, displayNameAttributeName,mailAddressAttributeName, userIdStrategy, groupIdStrategy)
        println ("--DEBUG---------------------------------------- 333333 -------------------------------------------")
        ldap_realm.isDisableRolePrefixing("{{ ldap.isDisableRolePrefixing }}")
        println ("--DEBUG---------------------------------------- 444444 -------------------------------------------")

        Jenkins.instance.setSecurityRealm(ldap_realm)
        Jenkins.instance.authorizationStrategy = new FullControlOnceLoggedInAuthorizationStrategy() ;
        Jenkins.instance.save()
    {% endif %}    

    def strategy = new hudson.security.ProjectMatrixAuthorizationStrategy()
    {% for account in cj_local_admin_users %}
        strategy.add(Jenkins.ADMINISTER, "{{ account.username }}")
    {% endfor %}
    {% for group in cj_local_admin_group %}
        strategy.add(Jenkins.ADMINISTER, "{{ group.groupname }}")
    {% endfor %}        
    {% if cj_allow_anon_read is defined %}
        strategy.add(hudson.model.View.READ, 'anonymous')
        strategy.add(hudson.model.Item.READ, 'anonymous')
        strategy.add(Jenkins.READ, 'anonymous')
        strategy.add(hudson.PluginManager.UPLOAD_PLUGINS,'anonymous')
    {% endif %}

    instance.setAuthorizationStrategy(strategy)
    instance.save()    
}