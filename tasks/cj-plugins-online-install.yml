---

- include: "cj-update_site.yml"
- include: "cj-plugin-sets.yml"
- include: "cj-auth_check.yml"

- name: "get installed plugin list"
  shell: >
    java -jar {{ cj_cli_jar_location }} \
    -s http://{{ cj_cli_hostname }}:{{ cj_http_port }}{{ cj_application_context | default('') }}/ \
    list-plugins | awk '{print $1}'
  register: plugins_installed
  changed_when: false

- name: "Install Jenkins plugins | method implemented for online installations"
  command: >
    java -jar {{ cj_cli_jar_location }} \
    -s http://{{ cj_cli_hostname }}:{{ cj_http_port }}{{ cj_application_context | default('') }}/ \
    install-plugin {{ item.name }}
  register: ips
  with_items:
    - "{{ cj_plugins }}"
  when: plugins_installed and plugins_installed.stdout.find('{{ item.name }}') == -1
  until: ips.rc == 0
  retries: 10
  delay: 8

## We need to restart to run scripts in init.groovy.d with installed plugins
- include: "cj-restart-jenkins.yml"


- name: "stop jenkins"
  service:
    name: jenkins
    state: stopped

- name: "Python script for add public-key of user jenkins to the first 'admin' user"
  template:
    src: "{{ item }}.j2"
    dest: "/tmp/{{ item }}"
    owner:  "{{ cj_runas_user }}"
    group:  "{{ cj_runas_group }}"
    mode: 0755
  with_items:
    - update-user-xml.python

- name: "Execute the script: /tmp/update-user-xml.python"
  shell: >
    /tmp/update-user-xml.python
  ignore_errors: true
  register: result

- include: "cj-restart-jenkins.yml"

- name: "Output of the last command"
  debug: var=result


#- set_fact:
#    jenkins_plugin_install_params:
#      url_username: "{{ jenkins_local_admin_users[0].username }}"
#      url_password: "{{ jenkins_local_admin_users[0].password }}"
#
#- debug: var=jenkins_plugins
#
#- name: "Install Jenkins plugins(s) | method implemented for online installations [no-auth]"
#  jenkins_plugin:
#    name: "{{ item.name }}"
##    state: "{{ item.value['version'] }}"
#  with_list: "{{ jenkins_plugins }}"
#  register: ips
##  until: ips.results.rc == 0
#  retries: 10
#  delay: 8
#  when: not jenkins_auth_enabled
#
#
#- name: "Install Jenkins plugins(s) | method implemented for online installations [with-auth]"
#  jenkins_plugin:
#    name: "{{ item.name }}"
#    params: "{{ jenkins_plugin_install_params }}"
##    state: "{{ item.value['version'] }}"
#  with_list: "{{ jenkins_plugins }}"
#  register: ips
##  until: ips.results.rc == 0
#  retries: 10
#  delay: 8
#  when: jenkins_auth_enabled
#
#
#- debug: var=ips
#
#- name: "jenkins_restart_required defaults to no"
#  set_fact:
#    jenkins_restart_required: no
#
#- name: "jenkins_restart_required is set to yes if any plugin was installed"
#  set_fact:
#    jenkins_restart_required: yes
#  when: item.changed
#  with_items: "{{ ips.results }}"
#
#- name: "restart Jenkins if required ..."
#  service:
#    name: jenkins
#    state: restarted
#  when: jenkins_restart_required
