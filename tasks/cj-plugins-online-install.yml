---

- include: "cj-update_site.yml"
- include: "cj-plugin-sets.yml"
- include: "cj-auth_check.yml"

- name: "get installed plugin list"
  shell: >
    java -jar {{ cj_cli_jar_location }} \
    -s http://{{ cj_cli_hostname }}:{{ cj_http_port }}{{ cj_application_context | default('') }}/ \
    list-plugins | awk '{print $1}'
  register: plugins_installed
  changed_when: false

- name: "Install Jenkins plugins | method implemented for online installations"
  command: >
    java -jar {{ cj_cli_jar_location }} \
    -s http://{{ cj_cli_hostname }}:{{ cj_http_port }}{{ cj_application_context | default('') }}/ \
    install-plugin {{ item.name }}
  register: ips
  with_items:
    - "{{ cj_plugins }}"
  when: plugins_installed and plugins_installed.stdout.find('{{ item.name }}') == -1
  until: ips.rc == 0
  retries: 10
  delay: 8
  notify: "restart jenkins"

- debug: var=ips

- service:
    name: jenkins
    state: restarted
  notify: "service jenkins restart"
- meta: flush_handlers

- name: "Python script for add public-key of user jenkins to the first 'admin' user"
  template:
    src: "{{ item }}.j2"
    dest: "/tmp/{{ item }}"
    owner:  "{{ cj_runas_user }}"
    group:  "{{ cj_runas_group }}"
    mode: 0755
  with_items:
    - update-user-xml.python

- name: "Execute the script: /tmp/update-user-xml.python"
  shell: >
    /tmp/update-user-xml.python
  ignore_errors: true
  notify: "service jenkins restart"
  register: result